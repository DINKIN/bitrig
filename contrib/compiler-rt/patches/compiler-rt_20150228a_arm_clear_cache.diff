commit c292f3d22f785f7df39729b5d69e160d6e97a800
Author: Patrick Wildt <patrick@blueri.se>
Date:   Thu Jan 1 21:50:06 2015 +0100

    compiler-rt: Apply and merge clear cache change for arm.

diff --git a/contrib/compiler-rt/lib/builtins/clear_cache.c b/contrib/compiler-rt/lib/builtins/clear_cache.c
index 4b46e8b..6e1b165 100644
--- a/contrib/compiler-rt/lib/builtins/clear_cache.c
+++ b/contrib/compiler-rt/lib/builtins/clear_cache.c
@@ -30,6 +30,25 @@
   #include <asm/unistd.h>
 #endif
 
+#if defined(__OpenBSD__) || defined(__Bitrig__)
+# if defined(__arm__)
+#include <machine/asm.h>
+#include <sys/syscall.h>
+#include <arm/swi.h>
+
+static inline void
+sysarch (int32_t sysarch_id, void *arg)
+{
+	__asm volatile(" mov r0, %0;"
+	    " mov r1, %1;"
+	    " ldr r12, =%c2;"
+	    " swi %3" ::
+	    "r" (sysarch_id), "r" (arg), "i"(SYS_sysarch), "i"(SYS_sysarch|SWI_OS_NETBSD):
+	    "0", "1");
+}
+# endif
+#endif
+
 /*
  * The compiler generates calls to __clear_cache() when creating 
  * trampoline functions on the stack for use with nested functions.
@@ -51,6 +70,14 @@ void __clear_cache(void *start, void *end) {
         arg.len = (uintptr_t)end - (uintptr_t)start;
 
         sysarch(ARM_SYNC_ICACHE, &arg);
+    #elif defined(__OpenBSD__) || defined(__Bitrig__)
+        struct {
+                unsigned int addr;
+                int          len;
+        } s;
+        s.addr = (unsigned int)(start);
+        s.len = (end) - (start);
+        (void) sysarch (0, &s);
     #elif defined(__ANDROID__)
          const register int start_reg __asm("r0") = (int) (intptr_t) start;
          const register int end_reg __asm("r1") = (int) (intptr_t) end;
